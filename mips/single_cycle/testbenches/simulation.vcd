$date
	Sun Dec 30 19:27:26 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_bench $end
$var wire 32 ! res_tb [31:0] $end
$var wire 1 " zero_tb $end
$var reg 4 # alucont_tb [3:0] $end
$var reg 32 $ expected_data [31:0] $end
$var reg 32 % rd1_tb [31:0] $end
$var reg 32 & rd2_tb [31:0] $end
$var reg 32 ' test_data_1 [31:0] $end
$var reg 32 ( test_data_2 [31:0] $end
$scope module UUT $end
$var wire 4 ) alucont [3:0] $end
$var wire 32 * rd1 [31:0] $end
$var wire 32 + rd2 [31:0] $end
$var wire 1 " zero $end
$var reg 32 , res [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10001010000000000 ,
b11000000100010010101111010000001 +
b10010000101010011010100100100 *
b0 )
b11000000100010010101111010000001 (
b10010000101010011010100100100 '
b11000000100010010101111010000001 &
b10010000101010011010100100100 %
b10001010000000000 $
b0 #
0"
b10001010000000000 !
$end
#10000
b10110101111101001101011001101011 ,
b10110101111101001101011001101011 !
b10110101111101001101011001101011 $
b10110001111100000101011001100011 &
b10110001111100000101011001100011 +
b10000100100001001101011000001001 %
b10000100100001001101011000001001 *
b10110001111100000101011001100011 (
b10000100100001001101011000001001 '
b1 #
b1 )
#20000
b1001101100110010001010010011010 ,
b1001101100110010001010010011010 !
b1001101100110010001010010011010 $
b1000110110111111001100110001101 &
b1000110110111111001100110001101 +
b110101110010111101100001101 %
b110101110010111101100001101 *
b1000110110111111001100110001101 (
b110101110010111101100001101 '
b10 #
b10 )
#30000
b101001100010110011001001010011 ,
b101001100010110011001001010011 !
b101001100010110011001001010011 $
b10001001001101110101001000010010 &
b10001001001101110101001000010010 +
b10110010110000101000010001100101 %
b10110010110000101000010001100101 *
b10001001001101110101001000010010 (
b10110010110000101000010001100101 '
b110 #
b110 )
#40000
b1 ,
b1 !
b1 $
b110110101111100110100001101 &
b110110101111100110100001101 +
b111100111110001100000001 %
b111100111110001100000001 *
b110110101111100110100001101 (
b111100111110001100000001 '
b111 #
b111 )
#50000
b11000000010100000000001010000000 ,
b11000000010100000000001010000000 !
b11000000010100000000001010000000 $
b11110100011011100110100111101 &
b11110100011011100110100111101 +
b111011001000111111000101110110 %
b111011001000111111000101110110 *
b11110100011011100110100111101 (
b111011001000111111000101110110 '
b1100 #
b1100 )
#60000
1"
b0 ,
b0 !
b0 $
b1110110110101000101011111101101 &
b1110110110101000101011111101101 +
b1110110110101000101011111101101 %
b1110110110101000101011111101101 *
b1110110110101000101011111101101 (
b1110110110101000101011111101101 '
b110 #
b110 )
#70000
